{"version":3,"sources":["redux/slices/countriesSlice.js","redux/actions/countriesActions.js","components/pages/error/errorPage.jsx","components/countriesCards/Card.jsx","components/pagination/pagination.jsx","components/countriesCards/Cards.jsx","components/filters/filtersSelect.jsx","redux/slices/activitiesSlice.js","components/navbar/searchBar/searchBar.jsx","components/navbar/navbar.jsx","components/Loaders/Loading.jsx","components/pages/home/Home.jsx","redux/actions/activitiesAction.js","components/pages/Landing/Landing.jsx","components/form/Form.jsx","components/countryDetail/Detail.jsx","App.js","reportWebVitals.js","redux/index.js","index.js"],"names":["countriesSlice","createSlice","name","initialState","countries","backup","Country","error","reducers","GetAllCountries","state","action","payload","GetOneCountry","FilterCountries","FilteredByAlphabeticalOrder","filtered","sort","a","b","FilteredByPopulation","population","FilteredByActivities","filter","country","activities","map","activity","includes","CleanErrorState","actions","getCountries","dispatch","axios","get","data","countryByName","getFilterByAlphabeticalOrder","order","getFilterByPopulation","filteredByAlphabetical","filteredByPopulation","cleanErrorState","undefined","ErrorPage","useSelector","store","navigate","useNavigate","useDispatch","className","src","autoPlay","muted","loop","onClick","Card","flag","continent","languages","cid","countryLanguages","test","key","push","onMouseOver","onMouseLeave","console","log","alt","slice","language","Pagination","page","setPage","max","useState","currentPage","setCurrentPage","window","scrollTo","disabled","value","autoComplete","onKeyDown","e","val","parseInt","target","keyCode","isNaN","onChange","Cards","Countries","countriesPerPage","Math","ceil","length","flags","continents","id","FilterSelector","combinadeFilters","setCombinadeFilters","handleContinetsFilter","preventDefault","handleActivities","handleChange","combinadeHandler","o","op","activitiesSlice","GetAllActivities","SearchBar","setCountry","countryDetail","type","keyDown","onKeyUp","keyUp","NavBar","handleClick","path","Loading","Home","setLoading","useEffect","useLocation","pathname","LandingPage","ActivityForm","setActivity","activitySeason","setActivitySeason","activityDifficulty","setActivityDifficulty","activityDuration","setActivityDuration","activityCountries","setActivityCountries","handleSubmit","newActivity","season","duration","difficulty","post","onSubmit","placeholder","min","step","list","num","Detail","countryByIdd","countryById","capital","area","to","replace","App","element","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","dotenv","config","defaults","baseURL","process","REACT_APP_API","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.212999a5.chunk.js","sourcesContent":["import { createSlice, current } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    countries: [],\r\n    backup: [],\r\n    Country: null,\r\n    error: null,\r\n}\r\n\r\nexport const countriesSlice = createSlice({\r\n    name: \"countries\",\r\n    initialState,\r\n    reducers:{\r\n        GetAllCountries: (state, action)=>{\r\n            if(typeof action.payload === \"string\"){\r\n                state.error = action.payload\r\n            }else{\r\n                state.countries = action.payload\r\n                state.backup = action.payload\r\n            }\r\n        },\r\n        GetOneCountry: (state, action) =>{\r\n            if(typeof action.payload === \"string\"){\r\n                state.error = action.payload\r\n            }else{\r\n                state.Country = action.payload\r\n            }\r\n        },\r\n        FilterCountries: (state, action)=>{\r\n            state.countries = action.payload\r\n        },\r\n        FilteredByAlphabeticalOrder:(state, action)=>{\r\n            if(action.payload === \"asc\"){\r\n                let filtered = state.countries.sort((a,b) => (a.name > b.name) ? 1 : ((b.name > a.name) ? -1 : 0))\r\n                state.countries = filtered\r\n            }else if(action.payload === \"desc\"){\r\n                let filtered = state.countries.sort((a,b) => (a.name < b.name) ? 1 : ((b.name < a.name) ? -1 : 0))\r\n                state.countries = filtered\r\n            }\r\n\r\n        },\r\n        FilteredByPopulation: (state, action)=>{\r\n            if(action.payload === \"asc\"){\r\n                let filtered = state.countries.sort((a,b) => a.population - b.population)\r\n                state.countries = filtered\r\n            }else if(action.payload === \"desc\"){\r\n                let filtered = state.countries.sort((a,b) => b.population - a.population)\r\n                state.countries = filtered\r\n            }\r\n        },\r\n        FilteredByActivities:(state,action) =>{\r\n            let filtered = state.countries.filter((country)=> country.activities && country.activities.map((activity)=> activity?.name).includes(action.payload))\r\n            state.countries = filtered\r\n        },\r\n        CleanErrorState: (state,action)=>{\r\n            state.error = action.payload\r\n        }\r\n    }\r\n})\r\n\r\nexport const {GetAllCountries, GetOneCountry, FilterCountries, FilteredByAlphabeticalOrder, FilteredByPopulation, FilteredByActivities,CleanErrorState} = countriesSlice.actions\r\n\r\nexport default countriesSlice.reducer","import axios from \"axios\"\r\nimport { GetAllCountries,GetOneCountry,FilterCountries, FilteredByAlphabeticalOrder,\r\n     FilteredByPopulation, FilteredByActivities,CleanErrorState } from \"../slices/countriesSlice\"\r\n\r\n\r\nexport const getCountries = () => {\r\n    return async dispatch =>{\r\n        const countries = (await axios.get(`/countries`)).data\r\n        if(countries){\r\n            dispatch(GetAllCountries(countries))\r\n        }else{            \r\n            let error = \"Error al conectar con el servidor\"\r\n            dispatch(GetAllCountries(error))\r\n        }\r\n    }\r\n}\r\n\r\nexport const countryByName = (name) => {\r\n    return async dispatch =>{\r\n        const Country = (await axios.get(`/countries/country/${name}`)).data\r\n        dispatch(GetOneCountry(Country))\r\n    }\r\n}\r\n\r\nexport const countryById =(id)=>{\r\n    return async dispatch =>{\r\n        const countryByIdd = (await axios.get(`/countries/country/${id}`)).data\r\n        dispatch(GetOneCountry(countryByIdd))\r\n    }\r\n}\r\n\r\nexport const getFilterByContinents = (continent) => {\r\n    return async dispatch =>{\r\n        const filtered = (await axios.get(`/filters/continents/${continent}`)).data\r\n        dispatch(FilterCountries(filtered))\r\n    }\r\n}\r\n\r\nexport const getFilterByAlphabeticalOrder = (order) => {\r\n    return async dispatch =>{\r\n        const filtered = (await axios.get(`/filters/alphabetical/${order}`)).data\r\n        dispatch(FilterCountries(filtered))\r\n    }\r\n}\r\n\r\nexport const getFilterByPopulation = (order) => {\r\n    return async dispatch =>{\r\n        const filtered = (await axios.get(`/filters/population/${order}`)).data\r\n        dispatch(FilterCountries(filtered))\r\n    }\r\n}\r\n\r\nexport const filteredByAlphabetical = (order) =>{\r\n    return async dispatch =>{\r\n        dispatch(FilteredByAlphabeticalOrder(order))\r\n    }\r\n}\r\n\r\nexport const filteredByPopulation = (order)=>{\r\n    return async dispatch =>{\r\n        dispatch(FilteredByPopulation(order))\r\n    }\r\n}\r\n\r\nexport const filteredByActivities = (activity) =>{\r\n    return async dispatch =>{\r\n        dispatch(FilteredByActivities(activity))\r\n    }\r\n}\r\n\r\nexport const cleanErrorState = ()=>{\r\n    return async dispatch=>{\r\n        dispatch(CleanErrorState(undefined))\r\n    }\r\n}","import React from \"react\";\r\nimport { useSelector,useDispatch } from \"react-redux\";\r\nimport { useNavigate} from \"react-router-dom\"\r\nimport { cleanErrorState } from \"../../../redux/actions/countriesActions\";\r\nimport \"./errorPage.scss\"\r\n\r\nexport const  ErrorPage =()=>{\r\n\r\n    const error = useSelector(store=> store.countries.error)\r\n\r\n    const navigate = useNavigate()\r\n    const dispatch = useDispatch()\r\n    const handleClick =()=>{\r\n        dispatch(cleanErrorState())\r\n        navigate(\"/home\")\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <video src=\"https://videos.pond5.com/3d-stylized-world-map-flying-footage-084821302_main_xxl.mp4\" autoPlay muted loop />\r\n            <div className=\"error\">\r\n                <h1>\r\n                {error ? error: \"something went wrong  😥\"}\r\n                </h1>\r\n                <button onClick={handleClick}>Home Page</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport {useNavigate} from \"react-router-dom\"\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { countryByName } from \"../../redux/actions/countriesActions\";\r\nimport { cleanErrorState } from \"../../redux/actions/countriesActions\";\r\nimport './Card.scss'\r\n\r\n\r\nexport const Card = ({name, flag, continent,languages, population,cid}) =>{\r\n\r\n    let countryLanguages = languages !== undefined && languages !== null ? [] : null\r\n    const test = useSelector(store=>store.countries.Country)\r\n    if(countryLanguages !== null ) for(let key in languages) countryLanguages.push(languages[key])\r\n\r\n    const navigate = useNavigate()\r\n    const dispatch = useDispatch()\r\n\r\n    const handleClick=()=>{\r\n        navigate(`/detail/${cid}`)\r\n    }\r\n\r\n    const handleMouseLeave=()=>{\r\n        dispatch(cleanErrorState())\r\n        console.log(test)\r\n    }\r\n\r\n    const handlerMouseOver =()=>{\r\n        dispatch(countryByName(name))\r\n    }\r\n\r\n    return(\r\n        <div className=\"cardContainer\">\r\n            <div className=\"Card\" onMouseOver={handlerMouseOver} onMouseLeave={handleMouseLeave} onClick={handleClick}>\r\n                <img className=\"flag\" src={flag} alt='flag not found'/>\r\n                <h3 className=\"name\">{name}</h3>\r\n                <p className=\"continet\">{`Continent: ${continent}`}</p>\r\n                <p className=\"population\">{`Population: ${population}`}</p>\r\n                <span>Languages</span>\r\n                { countryLanguages && countryLanguages.slice(0,2).map((language) =>{\r\n                  return (<p className=\"language\">{ language}</p>)\r\n                })}\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n\r\n}","import React,{useState} from \"react\";\r\nimport \"./pagination.scss\"\r\n\r\n\r\nexport const Pagination  = ({page,setPage,max}) =>{\r\n\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n\r\n    const nextPage = ()=>{\r\n        setCurrentPage(currentPage + 1)\r\n        setPage(page + 1)\r\n        window.scrollTo(0, 200)\r\n    }\r\n    const prevPage=()=>{\r\n        setCurrentPage(currentPage - 1)\r\n        setPage(page - 1)\r\n        window.scrollTo(0, 200)\r\n    }\r\n\r\n    const onKeyDown = e =>{\r\n        let val = parseInt(e.target.value)\r\n        if(e.keyCode === 13){\r\n            setCurrentPage(parseInt(e.target.value))\r\n            if(isNaN(val) || val < 1 || val > max){\r\n                setCurrentPage(1)\r\n                setPage(1)\r\n            }else{\r\n                setPage(val)\r\n                window.scrollTo(0, 200)\r\n            }\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"pagination\">\r\n            <button className=\"previous\" onClick={prevPage} disabled={page === 1}>\r\n                prev\r\n            </button>\r\n            <input className=\"page\" value={currentPage} autoComplete=\"off\" onKeyDown={e=>onKeyDown(e)} onChange={e=>setCurrentPage(e.target.value)}/>\r\n             <p>{`of   ${max}`}</p>\r\n            <button className=\"next\" onClick={nextPage} disabled={ page === max}>\r\n                next  \r\n            </button>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport { Card } from \"./Card\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useState } from \"react\";\r\nimport { Pagination } from \"../pagination/pagination\";\r\nimport './Cards.scss'\r\n\r\n\r\nexport const Cards = ({countries})=>{\r\n\r\n    const Countries = useSelector(store => store.countries.countries)\r\n    const [page,setPage] = useState(1)\r\n    const [countriesPerPage ,setCountriesPerPage] = useState(6)\r\n    const max = Math.ceil(Countries.length / countriesPerPage)\r\n\r\n\r\n\r\n    return(\r\n        <div className=\"cards\">\r\n            {\r\n                countries && countries.slice((page-1) * countriesPerPage,\r\n                 (page - 1) *  countriesPerPage + countriesPerPage).map(country =>{\r\n                    return (                      \r\n                        <Card\r\n                        key={country.id}\r\n                        name={country.name}\r\n                        flag={country.flags}\r\n                        languages={country.languages}\r\n                        continent={country.continents}\r\n                        population={country.population}\r\n                        cid={country.id}\r\n                        />\r\n                    )\r\n                })\r\n            }\r\n            <Pagination page={page} setPage={setPage} max={max}/>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getCountries,  getFilterByPopulation,filteredByAlphabetical,  getFilterByAlphabeticalOrder, filteredByPopulation, getFilterByContinents, filteredByActivities } from \"../../redux/actions/countriesActions\"\r\nimport { useState } from \"react\";\r\nimport \"./filters.scss\"\r\n\r\n\r\nexport const FilterSelector= ()=>{\r\n    const [combinadeFilters, setCombinadeFilters] = useState(false)\r\n    const activities = useSelector(state => state.activities.activities)\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    function handleChange(e){\r\n        e.preventDefault()\r\n        if(e.target.value === \"Population\") {\r\n                \r\n        }else if(e.target.value === \"Ascendente\"){ \r\n            if(combinadeFilters){\r\n                dispatch(filteredByPopulation(\"asc\"))\r\n            }else{\r\n                dispatch(getFilterByPopulation(\"asc\"))\r\n            }\r\n        }else{\r\n            if(combinadeFilters){\r\n                dispatch(filteredByPopulation(\"desc\"))\r\n            }else{\r\n                dispatch(getFilterByPopulation(\"desc\"))\r\n            }\r\n        }\r\n    }\r\n\r\n    function combinadeHandler(e){\r\n        e.preventDefault()\r\n        if(e.target.value === \"Ascendente\" ){\r\n           if(combinadeFilters){\r\n            dispatch(filteredByAlphabetical(\"asc\"))\r\n        }else{\r\n            dispatch(getFilterByAlphabeticalOrder(\"asc\"))\r\n        }\r\n\r\n        }else if(e.target.value === \"Descendente\"){\r\n            if(combinadeFilters){\r\n                dispatch(filteredByAlphabetical(\"desc\"))\r\n            }else{\r\n                dispatch(getFilterByAlphabeticalOrder(\"desc\"))\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function handleContinetsFilter(e){\r\n        e.preventDefault()\r\n        if(e.target.value !== \"Continents\"){\r\n            \r\n        setCombinadeFilters(true)\r\n        dispatch(getFilterByContinents(e.target.value))\r\n        }else{\r\n            setCombinadeFilters(false)\r\n        }\r\n    }\r\n\r\n    function handleClick(){\r\n        dispatch(getCountries())\r\n    }\r\n\r\n    function handleActivities(e){\r\n        e.preventDefault()\r\n        if(e.target.value !== \"Activities\"){\r\n            \r\n            dispatch(filteredByActivities(e.target.value))\r\n        }\r\n    }\r\n    return(\r\n        <div className=\"filters\">\r\n            <select className=\"population\" onChange={(e)=>handleChange(e)}>\r\n             {[\"Population\",\"Ascendente\",\"Descendente\"].map(filter =>{\r\n                    return(\r\n                         <option value={filter}>{filter}</option>)\r\n            })}\r\n            </select>\r\n  \r\n            <select className=\"alphabetical\" onChange={(e)=> combinadeHandler(e)}>\r\n                    {[\"Alphabetical\",\"Ascendente\",\"Descendente\"].map((o) =>{\r\n                        return(\r\n                            <option value={o}>{o}</option>\r\n                        )\r\n                })}\r\n            </select>\r\n\r\n\r\n            <select className=\"continents\" onChange={(e)=> handleContinetsFilter(e)}>\r\n                {[\"Continents\",\"Oceania\",\"Asia\", \"North America\",\"South America\",\r\n                \"Africa\",\"Europe\",\"Antartica\"].map( op =>{\r\n                    return(<option value={op}>{op}</option>)\r\n                })\r\n                }\r\n            </select>\r\n\r\n            <select className=\"activities\" onChange={e => handleActivities(e)}>\r\n                <option>Activities</option>\r\n                {activities  &&  activities.map(activity =>{\r\n                  return (<option value={activity.name}>{activity.name}</option>)\r\n                })}\r\n            </select>\r\n\r\n            <button onClick={handleClick}>Refresh</button>\r\n        </div>\r\n    )\r\n}","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    activities: [],\r\n    error: \"\",\r\n}\r\n\r\nexport const activitiesSlice = createSlice({\r\n    name: \"activities\",\r\n    initialState,\r\n    reducers:{\r\n        GetAllActivities:(state, action)=>{\r\n            if(typeof action.payload === \"string\"){\r\n                state.error = action.payload\r\n            }else{\r\n                state.activities = action.payload\r\n            }\r\n        }\r\n    }\r\n})\r\n\r\nexport const { GetAllActivities} = activitiesSlice.actions\r\n\r\nexport default activitiesSlice.reducer","import React,{useState} from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { countryByName } from \"../../../redux/actions/countriesActions\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useNavigate} from \"react-router-dom\"\r\nimport \"./search.scss\"\r\n\r\n\r\nexport const SearchBar =()=>{\r\n    const [country, setCountry] = useState('')\r\n    const countryDetail = useSelector(store=> store.countries.Country)\r\n    const error = useSelector(store => store.countries.error)\r\n    const dispatch = useDispatch()\r\n    const navigate = useNavigate()\r\n\r\n\r\n    const handleClick =()=>{\r\n        if(country?.length > 0){\r\n            dispatch(countryByName(country))\r\n        }\r\n        if(error){\r\n            navigate(\"/error\")\r\n        }else if(countryDetail.id !== undefined){\r\n            navigate(`/detail/${countryDetail.id}`)\r\n        }\r\n    }\r\n\r\n    const keyDown =(e)=>{\r\n        if(e.keyCode === 13 && country.length > 0){\r\n            dispatch(countryByName(country))\r\n        }\r\n    }\r\n    \r\n    const keyUp =(e)=>{\r\n        if(e.keyCode === 13){\r\n            if(error){\r\n                navigate(\"/error\")\r\n            }else if(countryDetail.id !== undefined){\r\n                setCountry('')\r\n                navigate(`/detail/${countryDetail.id}`)\r\n            }}\r\n    }\r\n\r\n    return (\r\n        <div className=\"search\">\r\n            <input value={country} onChange={e => setCountry(e.target.value)} type=\"text\"\r\n             onKeyDown={e=> keyDown(e)} onKeyUp={e=>keyUp(e)} />\r\n            <button className=\"searchButton\" disabled={ country.length < 3 }  onClick={e=>handleClick(e)}>search</button>\r\n        </div>)\r\n}","import React from \"react\";\r\nimport { SearchBar } from \"./searchBar/searchBar\";\r\nimport { useNavigate} from \"react-router-dom\";\r\nimport \"./navbar.scss\"\r\n\r\n\r\nexport const NavBar =()=>{\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const handleClick =(e)=>{\r\n        const path = e.target.value\r\n        navigate(`/${path}`)\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar\">\r\n            <div className=\"links\">              \r\n                    <button className=\"link\" onClick={handleClick} value=\"\">Landing</button>   \r\n                    <button className=\"link\" onClick={handleClick} value=\"home\">Home</button>    \r\n                    <button className=\"link\" onClick={handleClick} value=\"newActivity\">Create</button>  \r\n            </div>\r\n            <SearchBar />\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport \"./loading.scss\"\r\n\r\nexport const Loading =()=>{\r\n    return(\r\n        <div className=\"loader\">\r\n            <h1>Loading...</h1>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Cards } from \"../../countriesCards/Cards\";\r\nimport { FilterSelector } from \"../../filters/filtersSelect\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { getCountries } from \"../../../redux/actions/countriesActions\";\r\nimport { getAllActivities } from \"../../../redux/actions/activitiesAction\";\r\nimport { useLocation} from \"react-router-dom\";\r\nimport {NavBar} from \"../../navbar/navbar\"\r\nimport { Loading } from \"../../Loaders/Loading\";\r\nimport './Home.scss'\r\n\r\n\r\nexport const Home = () =>{\r\n    const Countries = useSelector(store => store.countries.countries)\r\n    const error = useSelector(store => store.countries.error)\r\n    const dispatch = useDispatch()\r\n    const [loading,setLoading] = useState(true)\r\n\r\n    useEffect(()=>{\r\n        dispatch(getCountries())\r\n        dispatch(getAllActivities())\r\n        setLoading(false)\r\n    },[])\r\n\r\n    const path = useLocation()\r\n\r\n\r\n    return(\r\n\r\n        <div className=\"HomeContainer\">\r\n            <div className=\"HomeBackground\" />\r\n            {path.pathname !== \"/landing\" ? <NavBar/>: <></>}\r\n            <FilterSelector />\r\n            {Countries.length > 0 ? <Cards countries={Countries}/> : <Loading className=\"Loading\" /> }\r\n        </div>\r\n    )\r\n}","import axios from \"axios\";\r\nimport { GetAllActivities } from \"../slices/activitiesSlice\";\r\n\r\n\r\n\r\nexport const getAllActivities = ()=>{\r\n    return async dispatch =>{\r\n        const activities = (await axios.get(`/activities`)).data\r\n        dispatch(GetAllActivities(activities))\r\n    }\r\n}\r\n\r\nexport const postActivity = (newActivity) =>{\r\n    return async dispatch =>{\r\n        await axios.post(`/activities/post`, newActivity)\r\n    }\r\n}","import React from \"react\";\r\nimport {useNavigate} from \"react-router-dom\"\r\n\r\nimport \"./Landing.scss\"\r\n\r\nexport const LandingPage = ()=>{    \r\n\r\n    const navigate = useNavigate()\r\n    \r\n    const clickHandler=()=>{\r\n        navigate(\"/home\")\r\n    }\r\n\r\n    return(\r\n        <div className=\"LandingContainer\">\r\n            <h1 className=\"tittle\">Find your place</h1>\r\n            <button onClick={clickHandler}>start</button>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getFilterByAlphabeticalOrder } from \"../../redux/actions/countriesActions\";\r\nimport { postActivity } from \"../../redux/actions/activitiesAction\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { NavBar } from \"../navbar/navbar\";\r\nimport \"./form.scss\"\r\n\r\nexport const ActivityForm = () =>{\r\n    const countries = useSelector(store => store.countries.countries)\r\n    const dispatch = useDispatch()\r\n    const [activity, setActivity] = useState(\"\")\r\n    const [activitySeason, setActivitySeason] = useState(\"\")\r\n    const [activityDifficulty, setActivityDifficulty] = useState(\"\")\r\n    const [activityDuration ,setActivityDuration] = useState(0.00)\r\n    const [activityCountries, setActivityCountries] = useState(\"\")\r\n\r\n    const path = useLocation()\r\n\r\n    useEffect(()=>{\r\n        dispatch(getFilterByAlphabeticalOrder(\"asc\"))\r\n    },[])\r\n\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault()\r\n        dispatch(postActivity({name:activity,\r\n                            season: activitySeason,\r\n                            duration: activityDuration,\r\n                            difficulty: activityDifficulty,\r\n                            countries: activityCountries}))\r\n    }\r\n\r\n    return (\r\n        <div className=\"formContainer\">\r\n        {path.pathname !== \"/landing\" ? <NavBar/>: <></>}\r\n        <form onSubmit={e =>handleSubmit(e)}>\r\n                <input className=\"formInput\" type=\"text\" name=\"name\" value={activity} onChange={e => setActivity(e.target.value)}\r\n                placeholder=\"ingresa el nombre\" autoComplete=\"none\" />\r\n                <select type=\"form-select\" onChange={e =>setActivitySeason(e.target.value)}>\r\n                    {['season','summer','autum','winter','spring'].map(season =>{\r\n                      return(\r\n                          <option value={season} key={season}>{season}</option>\r\n                       )\r\n                  })}\r\n                </select>\r\n            <div>\r\n                <p className=\"tittle\">duration</p>\r\n                <input className=\"formInput\" type=\"float\" value={activityDuration} onChange={e => setActivityDuration(e.target.value)}/>\r\n            </div>\r\n            <div>\r\n                <p className=\"tittle\">difficulty</p>\r\n                <input className=\"formInput\" type=\"range\" min=\"1\" max=\"5\" step=\"1\"  list=\"tickmarks\"\r\n                onChange={e => setActivityDifficulty(e.target.value)}/>\r\n                <datalist id=\"tickmarks\">\r\n                   {['1','2','3','4','5'].map(num =>{\r\n                     return (\r\n                          <option value={num}>{num}</option>\r\n                            )\r\n                        })}\r\n                </datalist>\r\n            </div>\r\n                <select onChange={e => setActivityCountries(e.target.value)}>\r\n                    <option>countries</option>\r\n                    {countries && countries.map(country =>{\r\n                        return (\r\n                            <option value={country.name} key={country.id}>{country.name}</option>\r\n                        )\r\n                    })}\r\n                </select>\r\n            <button className=\"formButton\" type=\"submit\">creat activity</button>\r\n        </form>\r\n        </div>\r\n    )\r\n}","import React,{useState} from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useLocation, Navigate } from \"react-router-dom\";\r\nimport { NavBar } from \"../navbar/navbar\";\r\nimport { Loading } from \"../Loaders/Loading\";\r\nimport { countryById } from \"../../redux/actions/countriesActions\";\r\nimport \"./detail.scss\"\r\n\r\nexport  const Detail = () =>{\r\n\r\n    let data = useLocation()\r\n    const country = useSelector(store=>store.countries.Country)\r\n    const [error,setError]= useState(0)\r\n    let languages = []\r\n    const dispatch = useDispatch()\r\n\r\n    if(country){\r\n        for(let key in country?.languages) languages.push(country.languages[key])\r\n    }else{\r\n            \r\n    }\r\n    \r\n    const id = data.pathname.slice(-3)\r\n\r\n\r\n    if(country === null){\r\n        dispatch(countryById(id))\r\n        console.log(country)\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        \r\n        <div className=\"detail\">\r\n            {data.pathname !== \"/landing\" ? <NavBar/>: <></>}\r\n            {country?.id === undefined ?  <Loading /> : <div className=\"infoBackground\">\r\n                <img className=\"flag\" src={`${country?.flags}`} alt=\"country flag\"/>\r\n                <h1 className=\"name\">{country?.name}</h1>     \r\n                <div className=\"infoContainer\">               \r\n                    <div className=\"leftSideBar\">\r\n                        <h3 className=\"tittle\">Capital: </h3>\r\n                        <h3 className=\"tittle\">Continente: </h3>\r\n                        <h3 className=\"tittle\">Area: </h3>\r\n                        {country?.languages !== null ? <h3 className=\"tittle\">Population: </h3> :<></>}\r\n                        <h3 className=\"languages\">Languages</h3>\r\n                        {country?.activities !== undefined && country?.activities.length > 0 ?\r\n                        <h3 className=\"activities\">Activities</h3>: <></>}\r\n                    </div>\r\n                    <div className=\"rightSideBar\">\r\n                        <h3 className=\"text\">{country?.capital}</h3>\r\n                        <h3 className=\"text\">{country?.continents}</h3>\r\n                        <h3 className=\"text\">{country?.area}</h3>\r\n                        <h3 className=\"text\">{country?.population}</h3>\r\n                        {languages?.map(language =>{\r\n                        return (<h3 className=\"language\">{language}</h3>)\r\n                        })}\r\n                        {country?.activities && country.activities.map(activity =>{\r\n                        return(\r\n                        <h3 className=\"activity\">{activity.name}</h3>\r\n                        )})\r\n                        }\r\n                    </div>\r\n                </div>\r\n                </div>}\r\n                {error && <Navigate to=\"/error\" replace={true}/>}\r\n        </div>\r\n    )\r\n}","import {Routes , Route} from \"react-router-dom\"\r\nimport { ErrorPage } from \"./components/pages/error/errorPage\";\r\nimport {Home} from \"./components/pages/home/Home\"\r\nimport { LandingPage } from './components/pages/Landing/Landing';\r\nimport { ActivityForm } from \"./components/form/Form\";\r\nimport { Detail } from \"./components/countryDetail/Detail\";\r\nimport './App.scss';\r\n\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Routes>\r\n      <Route path=\"/error\" element={<ErrorPage />}/>\r\n      <Route exact path=\"/\" element={<LandingPage />} />\r\n      <Route path=\"/Home\" element={<Home />} />\r\n      <Route path=\"/newActivity\" element={<ActivityForm />}/>\r\n      <Route path=\"/detail/:country\" element={<Detail />}/>\r\n    </Routes>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {configureStore} from \"@reduxjs/toolkit\"\r\nimport countriesSlice from \"./slices/countriesSlice\"\r\nimport activitiesSlice from \"./slices/activitiesSlice\"\r\n\r\nexport const store = configureStore({\r\n    reducer:{\r\n        countries: countriesSlice,\r\n        activities: activitiesSlice\r\n    },\r\n})","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport axios from 'axios';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport  { Provider } from \"react-redux\";\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport {store} from \"./redux/index\";\r\nimport dotenv from \"dotenv\";\r\ndotenv.config();\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API || \"https://countries-web-app-api-v2-production.up.railway.app\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}